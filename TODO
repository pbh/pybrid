
* Tests

  - [X] test dir generator
  - [X] proper out dir names
  - [ ] proper get_output_dirs
  - [ ] pre hooks test
  - [ ] filter hooks test
  - [ ] post hooks test
  - [ ] write_string
  - [ ] author/name/groups availability

* Possible Tests

  - [ ] april copy test
  - [ ] pgsqlexec setup test
    
* Structure

** pybrid.loader

   - [X] load named _report

** pybrid.pybridtestcase

   - [X] new_output_dir()
   - [X] gen_output_dir()
   - [X] get_output_fn()

** pybrid.runner

   - [ ] __init__(reports, out_dir, pre_hooks, filters, post-hooks)
   - [ ] run()
   - [ ] get_report_metadata()
   - [ ] get_output_dirs()
   - [ ] pre-hooks
   - [ ] filter reports
   - [ ] mkdirs / run reports
   - [ ] post-hooks

** pybrid.pybridreport

   - [X] PybridReport
   - [X] PybridReport.write(output_dir)
   - [ ] PybridReport.write_string(output_dir) (with hasattr)
   - [ ] PyBridReport.{AUTHOR|NAME|GROUPS}

** pybrid.hooks (separate module)

   - [ ] april_copy
   - [ ] pgsqlexec_setup
   - [ ] index html generate hook
   - [ ] execute_cmd_with_index_html (append last for execute)
   
** pybrid.main

   argparse params:
   - output_dir
   - generate
   - executable
   - author
   - name glob
   - group

   loader
   runner: mkdirs / run reports
   execute

** pybridfile.py

   import pybrid

   pybrid.main(pre_hooks=[pybrid.hooks.pgsqlexec_setup(conf),]
               post_hooks=[pybrid.hooks.april_copy,]

** other changes

   - [ ] hey_april: set default asset dir option
   - [ ] hey_pgsqlexec: set default conn
   - [ ] hey_pgsqlexec: get cur/singleton (reset/renew=False)
   - [X] handle broken report import case
   - [ ] sphinx documentation
   - [ ] docstring documentation

** possible

   - [X] allow output dir name to be configurable
   - [ ] initial sql loader for default sql

